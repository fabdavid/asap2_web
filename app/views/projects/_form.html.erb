<!--<div class='card card-default' style='margin-top:10px'>
<div class='card-header'>
-->

<div class='step_title_fixed'>Create project</div>
<div class='step_title'>Create project</div>
<!--</div>
<div class='card-body'>-->

<div class='main_container'>
<%= form_for(project, :url => projects_path, :html => {:class => 'fullscreen_form'}) do |f| %>

<p id="notice"><%= raw notice %></p>

  <% if project.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(project.errors.count, "error") %> prohibited this project from being saved:</h2>

      <ul>
      <% project.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<% if @notice %>
<div class='alert alert-danger'><%= @notice %></div>
<% end %>

<div class='row'>
  <div class='form-group col-12 col-md-3'>
    <%= label_tag 'project_name', 'Project Name', {'data-toggle' => "tooltip"} %>
    <%= f.text_field :name, {:class => "form-control is-invalid", :placeholder => "Name of the project"} %>
    <div class="invalid-feedback">
      Mandatory
    </div>
  </div>

  <div class='form-group col-12 col-md-3'>
    <%= label_tag 'project_type_id', 'Project type', {'data-toggle' => "tooltip"} %>
    <% l = ProjectType.all.map{|e| [e.name, e.id]} %>
    <%= f.select :project_type_id, l,  {}, {:class => "form-control", :placeholder => "Project type"} %>
  </div>

  <div class='form-group col-12 col-md-2'>
    <%= label_tag 'version_id', 'ASAP version', {'data-toggle' => "tooltip"} %>
    <% l = Version.where(:activated => (admin?) ? [true, false] : true).order("id desc").all.select{|e| e.id > 3}.map{|e| [e.id.to_s + ((e.beta) ? ' (beta)' : ''), e.id]} %>
    <%= f.select :version_id, l,  {}, {:class => "form-control", :placeholder => "ASAP version"} %>
  </div>
  
  <div id='list_organims' class='form-group col-12 col-md-4'>
    <%= label_tag 'organism_id', "Organism" %>
    <%# @h_env['asap_data_db_version'] %>

    <% h_list_organisms = {'Most popular species' => Organism.where(:id => [1, 2, 35]).map{|o|  [o.short_name.capitalize + " - #{o.name} [TaxID:#{o.tax_id}]", o.id]}}

    ensembl_subdomains = Basic.sql_query2(:asap_data, @h_env['asap_data_db_version'], 'ensembl_subdomains', '', '*', nil)
    ensembl_subdomains.each do |e|
    organisms = Organism.where(:ensembl_subdomain_id => e.id).select{|o| o.name}.sort{|a, b| ((a.short_name && a.short_name.capitalize) || a.name) <=> ((b.short_name && b.short_name.capitalize) || b.name)}
     if organisms.size > 0
      h_list_organisms.merge!({e.name.capitalize => organisms.map{|o| [((o.short_name) ? "#{o.short_name.capitalize} - " : "")  + "#{o.name} [TaxID:#{o.tax_id}]", o.id]}})
     end
    end

    %>
    <% sel_organism = (params[:organism_id]) ? Organism.where(:tax_id => params[:organism_id]).first : nil %>
    <%= f.select :organism_id, grouped_options_for_select(h_list_organisms, ((sel_organism) ? [sel_organism.id] : nil)), {}, {class: 'form-control', divider: '---------'} %>
    <%#  organisms = Organism.where(:ensembl_subdomain_id => 6).select{|o| o.name}.sort{|a, b| ((a.short_name && a.short_name.capitalize) || a.name) <=> ((b.short_name && b.short_name.capitalize) || b.name)} %>
    <%# organisms.to_json if admin? %>
  </div>
</div>


<% if admin? %>

<!-- <div id='opt_input_select' class="btn-group btn-group-toggle" data-toggle="buttons">
  <label id='upload-choice_btn' class="btn btn-primary choice-btn active">
    <input type="radio" name="options" autocomplete="off" checked> Upload file / Send URL
  </label>
  <label id='hca-choice_btn' class="btn btn-primary choice-btn">
    <input type="radio" name="options" autocomplete="off"> Import from HCA
  </label>
</div>
-->


<div id='opt_input'>
  <div class="btn-group" role="group" aria-label="Input">
    <button id='upload-choice_btn' type="button" class="btn btn-primary choice_btn active">Upload file / Send URL</button>
    <button id='hca-choice_btn' type="button" class="btn btn-secondary choice_btn">Import from the Human Cell Atlas</button>
  </div>
</div>

<% end %>

<%= hidden_field_tag 'tab_choice', 'upload' %>

<div id='upload_container' class='opt_input_container'>
  <div class='form-group2' style='margin-right:15px;margin-left:15px'>
    <%= label_tag 'input_file', "Upload count / normalized gene expression matrix" %>
    <span id='help_input_file'>
      <span class='italic'>[10x(.h5 file), loom, text, zip, tar.gz, MEX/MTX formats supported]</span>
      <%= link_to 'Help on file formats', file_format_home_index_path() + "#input_file" %> | <%= link_to 'Example txt file', "/data/input.tab" %> | <%= link_to 'Tutorial: Getting started', tutorial_home_index_path(:t => 'getting_started') %> | <%= link_to 'Tutorial: Upload a 10x file (from Cell Ranger)', tutorial_home_index_path(:t => 'cell_ranger') %>
    </span>
  </div>
  <%= render :partial => 'upload_input_file' %>
</div>

<div id='hca_container' class='opt_input_container hidden'>
</div>

<div id='share_container'>
<%# render :partial => 'shares' %>
</div>
<br/>

<%= f.hidden_field :key  %>
<%= f.hidden_field :step_id, {:value => 1}  %>
<%= hidden_field_tag :active_step, params[:active_step] %>
<%= hidden_field_tag :hca_query, '{"fileFormat":{"is":["loom"]},"fileSource":{"is":["HCA Release"]}}' %>
<%#  hidden_field_tag :hca_query, '[{"facetName":"fileFormat","terms":["loom"]},{"facetName":"fileSource","terms":["HCA Release"]}]' %> 
<%= hidden_field_tag :provider_id, nil %>
<%= hidden_field_tag :sel_provider_projects, '{}' %>
<%= hidden_field_tag :provider_project_id, '' %>
<%= hidden_field_tag :provider_project_title, '' %>
<%= hidden_field_tag :provider_project_filekey, '' %>
<%= hidden_field_tag :provider_project_filename, '' %>
<%= hidden_field_tag :provider_project_fileurl, '' %>
<!--<%= f.hidden_field :group_filename  %>-->

  <div class="actions">
    <% button_name = (controller.action_name == 'new') ? "Create project" : "Update project" %>
    <%# f.submit button_name, {:disabled => 'disabled', :class => 'btn btn-primary ladda-button', :id =>'create_project_button'} %>
    <button type='button' id='create_project_button' class='btn btn-primary ladda-button', disabled = 'disabled'><%= button_name %></button>
  <!--  <span class='alert alert-danger'>Write a project name</span> -->
  </div>
<% end %>
</div>

<%= javascript_tag do %>

/*
$("#project_version_id").change(function(){
$(".main_container").html("<i>Updating form...</i>")
window.location = '<%= new_project_path() %>?version_id=' + $(this).val() 
})
*/

function upd_hca_preview(){
 var p = []
 console.log("test")
 p.push({name : 'q', value : $("#hca_query").val()})
 var url = "<%= hca_preview_projects_path() %>"
 refresh_post("hca_container", url, p, "post", {loading: 'fa-2x'})
}

$(".choice_btn").click(function(){
 var t = this.id.split("-")[0]
 $("#tab_choice").val(t)
 $(".opt_input_container").addClass("hidden")
 $(".choice_btn").removeClass("active")
 $(".choice_btn").removeClass("btn-primary")
 $(".choice_btn").addClass("btn-secondary")
 $("#" + t + "_container").removeClass("hidden")
 $(this).addClass("active")
 $(this).addClass("btn-primary")
 $(this).removeClass("btn-secondary")
})

$("#hca-choice_btn").click(function(){
// console.log($("#hca_container").children().length)
// if ($("#hca_container").children().length == 0){
  upd_hca_preview()
// }
})

/*
$("#create_project_button")
$('#create_').unbind('submit');
$('#clustering_form').submit(false);
*/

/*
$("#group_file").fileinput({
 uploadUrl: '<%= raw upload_file_projects_path(:type => 'group', :key => @project.key) %>', // server upload action
 uploadAsync: true,
 showPreview: false,
 showUpload: false,
 maxFileCount: 1,
 elErrorContainer: '#kv-error-2'
}).on("filebatchselected", function(event, files) {
 // trigger upload method immediately after files are selected
 $("#group_file").fileinput("upload");
}).on('filebatchpreupload', function(event, data, id, index) {
 $("#kv-success-2").html('<h4>Upload Status</h4><ul></ul>').hide();
}).on('fileuploaded', function(event, data, id, index) {
 var fname = data.files[index].name;
 var out = '<li>' + 'Uploaded file # ' + (index + 1) + ' - '  + fname + ' successfully.' + '</li>';
 $("#kv-success-2 ul").append(out);
 $("#group_file").attr('loaded', "1");
 $("#kv-success-2").fadeIn('slow');
 $("#project_group_filename").val(fname);

}).on('fileclear', function(event, id){
 $("#kv-success-2").hide();
 $("#project_group_filename").val('');
});
*/

function validate_form(test){
/*if (test === undefined){
test = false
}*/
<%# code_piece =" && $('#project_input_filename').val() != ''" : '' %>
//alert( $('#js-file-container tbody tr td div.alert-success').html());
//if ($("#project_name").val() != '' && ($('#js-file-container tbody tr td div.alert-success').html() || test == true)){
 
 // check if a checkbox is check in the hca table
 //var c = $(".hca-hit:checked")
  var c = $('input[name="hca_loom_file"]:checked')
 //if (($("#project_name").val() != '' || c.length > 0) && (($("#nber_cols").val() > 1 && $("#nber_rows").val() > 0) || $("#provider_project_id").val() != '' || $("#sel_provider_projects").val() != '{}')){
if ( ($("#nber_cols").val() > 1 && $("#nber_rows").val() > 0) || $("#provider_project_id").val() != '' || $("#sel_provider_projects").val() != '{}'){
$("#create_project_button").removeAttr('disabled')
}else{
$("#create_project_button").attr('disabled', 'disabled')
}
}


$("#project_name").keyup(function(){
 if ($(this).val().trim() != ''){
  $(this).css("border", "1px solid rgb(206, 212, 218)");
//  $(this).css("background-color", "white");
 }else{
  // if ($("#nber_cols_preview") && $("#nber_cols_preview").val() != 0){
  $(this).css("border", "1px solid #dc3545");
//  $(this).css("background-color", "#FFFAFA");
  // }
 }
validate_form()

})

$("#create_project_button").click(function(){
 // check if a checkbox is check in the hca table and replace name if the project name field is empty 
 var c = $(".hca-hit:checked")
 if (c.length > 0 && $("#project_name").val().replace(/^\s+|\s+$/g, '') == ''){
  var project_name = c.first().parent().parent().children()[1].innerHTML
  $("#project_name").val(project_name)
 }

 $("#new_project").submit()
})

$("#project_organism_id").change(function(){validate_form()});

// reload the page if there is something in the project name
<% if !params[:project_name] %>
if ($("#project_name").val() != ''){
 $(".main_container").html("<div class='loading'><i class='fa fa-spinner fa-pulse fa-fw fa-lg fa-2x'></i><br/><span class='loading_text'>Reloading...</span></div>")
 window.location.href = "<%= new_project_path() %>"
}
<% end %>
<% end %>

