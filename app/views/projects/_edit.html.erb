<ul class="nav nav-tabs mb-4" id="main_menu-nav" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="general-tab" data-toggle="tab" href="#pane-general" role="tab" aria-controls="general" aria-selected="true">General</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="sharing-tab" data-toggle="tab" href="#pane-sharing" role="tab" aria-controls="sharing" aria-selected="false">Sharing</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="public-tab" data-toggle="tab" href="#pane-public" role="tab" aria-controls="public" aria-selected="false">Private/Public</a>
  </li>
</ul>

<%= form_for(@project, :url => project_path(:key => @project.key))  do |f| %>

<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane active" id="pane-general" role="tabpanel" aria-labelledby="general-tab">

<%# admin? %>

<div class="form-group">
  <%= label_tag 'project[project_name]', "Project name" %>
  <%= f.text_field :name, :class => 'form-control' %>
</div>

<!--<div class="form-group">
  <%= label_tag 'project[organism_id]', "Organism" %>
  <% l = Organism.all.select{|o| o.id <3}.map{|o| [o.name, o.id]} %>
  <%= f.select :organism_id, l, {}, {:class => 'form-control'} %>
</div>
-->
<!--<% if @existing_group_file  %>
<p class="help-block">
  You already uploaded this file : <%= @project.group_filename %>.
  You can upload a modified group file below, but you will have to run again the analyses that are using this file.
<span id='delete_batch_file' class='btn btn-danger btn-xs'>Delete</span>
</p>
<% end %>
-->
<!--
<div class='form-group'>                                                                                                                                                                  
  <%= label_tag 'group_file', 'Group file input to correct for batch effect [Optional]' %> <span style='color:black'>[<%= link_to 'see required format', file_format_home_index_path() + "#batch_file", target: '_blank' %>]</span>
  <%= file_field_tag :group_file %>
  <div id="kv-error-2" style="margin-top: 10px; display: none;" class="file-error-message"></div> 
  <div id="kv-success-2" class="alert alert-success fade in" style="margin-top: 10px;  display: none;"></div>
  <p class="help-block">
    Text file with 2 tab-separated columns. First column : cell name, second column : batch ID [text or number].
  </p>
</div>
-->

<% if !@project.sandbox %>

<!--<div class='form-group'> 
<%= f.check_box :public %> <%= f.label :public, 'Analysis publicly available' %>
</div>
-->

<% if admin? %>

<%= render :partial => 'edit_metadata' %>

<% end %>

<div class='form-group'>
 <%= f.label :technology, 'Technology' %>
<%= f.text_field :technology, {:class => 'form-control form-inline'} %>
</div>

<div class='form-group'>
 <%= f.label :tissue, 'Tissue/Organ' %>
<%= f.text_field :tissue, {:class => 'form-control form-inline'} %>
</div>

<div class='form-group'>
 <%= f.label :extra_info, 'Additional information' %>
<%= f.text_field :extra_info, {:class => 'form-control form-inline'} %>
</div>

<div class='form-group'>
 <%= f.label :description, 'Experimental details' %>
<%= f.text_area :description, {:class => 'form-control form-inline'} %>
</div>

<% if admin? %>

<% @otts.sort{|a, b| a.rank <=> b.rank}.each do |ott| %>

<div class='form-group'>
  <%= f.label ott.name.to_sym, ott.label %>
  <% l = @annots.map{|annot| [annot.name, annot.id]}.sort %>
  <% l.unshift(["Select a metadata to load", ""]) %>
  <div class='form-inline'>
  <%= select_tag "project[ott][" + ott.id.to_s + "][annot]", options_for_select(l, (@h_ott_projects[ott.id] || '')), {:class => 'form-control annot_sel'} %>
  <span class='pl-3 pr-3'> OR </span>  
  <%= text_field_tag "project[ott][" + ott.id.to_s + "][ot]", "", {:class => 'form-control ot_search_field', :placeholder => 'Search and add an ontology term', :size => 26} %>
  <div id='list_ots_<%= ott.id %>'></div>
  <span class='pl-3 pr-3'> OR </span>
  <%= text_field_tag "project[ott][" + ott.id.to_s + "][free_text]", '', {:class => 'form-control form-inline ot_free_text', :placeholder => 'Add free-text term'} %>
  <button id='btn-add-<%= ott.id %>'  type='button' class='btn_load_free_text_term btn btn-success hidden'>Add term</button>
  </div>
  <div id='list_cats_<%= ott.id %>'></div>
<!--  <button id='btn-load_valid_terms-<%= ott.id %>' type='button' class='btn_load_terms btn btn-success hidden'>Load only valid terms</button> -->
  <button id='btn-load_all_terms-<%= ott.id %>' type='button' class='mt-3 btn_load_terms btn btn-success hidden'>Load terms</button>
  <div id='list_ot_projects_<%= ott.id %>' class='list_ot_projects'>   
    <% if @h_ot_projects[ott.id] %>
    <% @h_ot_projects[ott.id].each do |ot_project| %>
    <span id='ot_project_<%= ot_project.id %>'>
      <% if ot_project.cell_ontology_term_id %>
      <span id='ontology_term-<%= @h_ots[ot_project.cell_ontology_term_id].cell_ontology_id %>-<%= @h_ots[ot_project.cell_ontology_term_id].identifier %>' class='badge badge-success ot_project_badge pointer'><%= @h_ots[ot_project.cell_ontology_term_id].name %></span>
      <% else %>
      <span class='badge badge-secondary ot_project_badge pointer'><%= ot_project.free_text %></span>
      <% end %>
      <span id='del_ot_project-btn_<%= ott.id %>_<%= ot_project.id %>' class='del_ot_project text-danger pointer'><i class='fa fa-times-circle'></i></span>
    </span>
    <% end %>
    <% end %>
  </div>
  <%= hidden_field_tag "ot_project_ids_#{ott.id}", (@h_ot_projects[ott.id]) ? @h_ot_projects[ott.id].map{|e| e.id}.join(",") : '' %>
</div>

<% end %>

<% end %>

<div class='form-group'>
 <%# f.label :pmid, 'PMID of the article referencing this analysis' %>
<%# f.text_field :pmid, {:class => 'form-control form-inline'} %>
 <%= f.label :doi, 'DOI of the article referencing this analysis' %>
<%= f.text_field :doi, {:class => 'form-control form-inline'} %>

</div>

<div class='form-group'>
 <%= label_tag :gse_codes, 'GEO series (GSE identifiers) associated with this project (comma or space separated)' %>
<%= text_area_tag :geo_codes, @project.exp_entries.select{|ge| ge.identifier_type_id == 5}.map{|ge| ge.identifier}.join(", "), {:class => 'form-control form-inline'} %>
</div>

<div class='form-group'>
 <%= label_tag :array_express_codes, 'Array express IDs associated with this project (comma or space separated)' %>
<%= text_area_tag :array_express_codes, @project.exp_entries.select{|ge| ge.identifier_type_id == 6}.map{|ge| ge.identifier}.join(", "), {:class => 'form-control form-inline'} %>
</div>

<% if @project.public == true %>

<div class='form-group'>
 <%= f.label :replaced_by_project_key, 'If the project is obsolete, please provide the key of the project replacing it (this information will be shown in the report page with a link to the updated project)' %>
<%= f.text_field :replaced_by_project_key, {:class => 'form-control form-inline', :placeholder => 'New project key'} %>
<%= f.text_area :replaced_by_comment, {:class => 'form-control form-inline', :placeholder => 'You can provide here some comments here to explain the reasons why the project has been replaced'} %>
</div>

<% end %>


<button type="submit" class="btn btn-primary submit_project">Update project</button>
<button id='cancel_project' type="button" class="btn btn-default">Cancel</button>

</div>
 <div class="tab-pane" id="pane-sharing" role="tabpanel" aria-labelledby="sharing-tab">

<%# if admin? %>
<div id='share_container'>
<%= render :partial => 'shares' %>
</div>
<br/>

</div>

<% end %>

<!--
<div class='form-group'>
  <%= label_tag 'read_access', 'Shared with read-only access', {'data-toggle' => "tooltip", 'title' => "Comma-separated list of emails to whom you autorize a read-only access"} %>
  <%= f.text_field :read_access, {:class => "form-control", :placeholder => "Comma-separated list of emails to whom you give read-only access"} %>
</div>

<div class='form-group'>
  <%= label_tag 'write_access', 'Shared with write access', {'data-toggle' => "tooltip", 'title' => "Comma-separated list of emails to whom you autorize a write access"} %>
  <%= f.text_field :write_access, {:class => "form-control", :placeholder => "Comma-separated list of emails to whom you give write access"} %>
</div>
-->
<%# end %>
<!--
<%# f.hidden_field :group_filename  %>
-->
 <div class="tab-pane" id="pane-public" role="tabpanel" aria-labelledby="public-tab">

<div class='alert alert-info'>This project is currently <%= (@project.public == false) ? 'private' : 'public' %>.</div>

<% if owner? @project %>
<div id='set_public_container'>
<p>
<span id='public-btn' class='btn btn-success'><%= (@project.public == false) ? "Set public" : "Freeze new analyses" %></span>
<div id='set-public-details' class='hidden' >
  <% if @project.public == false %>
  <div class='alert alert-info'>
   <!-- This operation allows to publish your results, which will be not editable anymore.<BR/>
    If more analyses are added to the project you can then freeze the results to let know to the users of the project that you validated them and will remain stable.<br/> -->
Once public, all analyses are frozen (and marked as such) and cannot be modified anymore.<br/>
It will still be possible to create new analyses to your project and freeze them when you decide that they are stable.<br/>
  </div>
  <div class='alert alert-danger'>
    <b>Please be aware that you have to comply with the usual ethical and legal rules for sharing this dataset. In the case of human data, you must ensure that the underlying personal data is not accessible.</b>
  </div>
  <div class='alert alert-danger'>
    WARNING: This procedure is not reversible!
  </div>
 <div id='confirm_set_public-btn' class='btn btn-success'>Confirm to set this project public</div> 
 <div id='cancel-public-btn' class='btn btn-outline-secondary'>Cancel</div>
  <% else %>
  <div>
    This operation allows to freeze results of a public project
  </div>
  <div class='alert alert-danger'>
    WARNING: This procedure is not reversible!
  </div>
  <div id='confirm_set_public-btn' class='btn btn-success'>
    Confirm to freeze all new analyses of this project
  </div>
  <div id='cancel-public-btn' class='btn btn-outline-secondary'>Cancel</div>
  <% end %>
</div>
</p>
</div>
<% end %>

</div>

</div>

<% end %>

<%= javascript_tag do %>

var h_ontologies = <%= raw @h_ontologies.to_json %>
var h_annots = <%= raw @h_annots.to_json %>

$(".ot_project_badge").click(function(){
let t= this.id.split("-")
let ontology_id = t[1]
let identifier = t[2]
console.log("ONTOLOGY_ID:" + ontology_id)
console.log(h_ontologies[ontology_id])
console.log("http://purl.obolibrary.org/obo/" +identifier.replace(":", "_"))
let url_mask = h_ontologies[ontology_id].url_mask
console.log("URL_MASK: " + url_mask)
let url = ""
if (url_mask == null || url_mask == ''){
url = "http://purl.obolibrary.org/obo/" + identifier.replace(":", "_")
}else{
url = url_mask.replace("{ID_WITH_UNDERSCORE}", identifier.replace(":", "_"))
url = url.replace("{ID}", identifier)
}
window.open(url)
})

function reset_ott_form(ott_id){
$("#list_cats_" + ott_id).empty()
$("#btn-load_all_terms-" + ott_id).addClass("hidden")
}

$(".ot_free_text").keyup(function(){
let ott_id= this.id.split("_")[2]
if ($(this).val().trim() != ''){
$("#btn-add-" + ott_id).removeClass("hidden")
}
})

$(".btn_load_free_text_term").click(function(){
let ott_id = this.id.split("-")[2]
let data = [
{name : 'project_key', value : "<%= @project.key %>"},
{name : 'ot_project[free_text]', value : $("#project_ott_" + ott_id + "_free_text").val()},
{name : 'ot_project[ontology_term_type_id]', value : ott_id},
{name : 'partial', value : '1'}] 
refresh_post("list_ot_projects_" + ott_id, "<%= raw ot_projects_path %>", data, 'post', {loading:'fa-2x'})
$("#project_ott_" + ott_id + "_free_text").val("")
$(this).addClass('hidden')
})

$(".btn_load_terms").click(function(){
var ott_id = this.id.split("-")[2]                                                                                                                                                
var v = $("#project_ott_" + ott_id + "_annot").val()                                                                                                                                                             
console.log("OTT_ID: " + ott_id + " => " + v)
let list_cats = JSON.parse(h_annots[v].list_cat_json)
if (list_cats){
$("#list_cats_" + ott_id).html(list_cats.map(x => "<span class='badge badge-info'>" + x + "</span>").join(" "))
}
let data = [{name : 'ott_id', value : ott_id}]
reset_ott_form(ott_id)
refresh_post("list_ot_projects_" + ott_id, "<%= raw annots_path %>/" + v + "/batch_load_ontology", data, "post", {loading:'fa:2x'})

})

$(".list_ot_projects").on("click", ".del_ot_project", function(){
  let t =  this.id.split("_")
let ott_id = t[3]
let cot_id = t[4]
/*  var l = $("#cla_cell_ontology_term_ids").val().split(",")
  l = l.filter(x => x != cot)
  $("#cla_cell_ontology_term_ids").val(l.join(","))
$("#cla_cot_" + cot).remove()
*/
let data = [{name : 'partial', value : '1'}, {name : 'ott_id', value: ott_id}]
refresh_post("list_ot_projects_" + ott_id, "<%= raw ot_projects_path %>/" + cot_id, data, "delete", {loading:'fa:2x'})
 })


var otts = <%= raw @otts.to_json %>

for (const ott of otts) {

 $("#project_ott_" + ott.id + "_ot").autocomplete({
   minLength: 0,
  appendTo: '#list_ots_' + ott.id,
  classes: {
   "ui-autocomplete": "test_ui",
  },
  position: {
   offset: '0 0' // Shift 0px left, 4px down.
  },
  source:  function(request, response) {
  $.ajax({
          url: "<%= raw autocomplete_cell_ontology_terms_path() %>",
          dataType: "json",
          beforeSend: function(){
         },
          data: {
            term:  $("#project_ott_" + ott.id + "_ot").val(),
            cell_ontology_id: ott.cell_ontology_ids,
            organism_id: <%= @organism.id %>
          //  tax_id: <%= @organism.tax_id %>
          //,
          //  dataset_id: $("#dataset_id").val()//,
          },
          success: function( data ) {
            response( data );
          }
        });
     },
     select: function( event, ui ) {
if (ui.item){
console.log("OTT_ID: " + ott.id)
//           var list_cots = ($("#ot_ids_" + ott.id).val() != '') ? $("#ot_ids_" + ott.id).val().split(",") : []
 //          if (!list_cots.includes(ui.item.id)){
   //         var cot =  ui.item.label
   //         list_cots.push(ui.item.id)
//  var ontology_term_name = t_gene[0] + " [" + t_gene[1] + "]"
let data = [
{name : 'project_key', value : "<%= @project.key %>"},
{name : 'ot_project[cell_ontology_term_id]', value : ui.item.id},
{name : 'ot_project[ontology_term_type_id]', value : ott.id},
{name : 'partial', value : '1'}]
refresh_post("list_ot_projects_" + ott.id, "<%= raw ot_projects_path %>", data, 'post', {loading:'fa-2x'})
         //   $("#list_ots_" + ott.id).append("<span id='cla_cot_" + ui.item.id + "'><span class='badge badge-info cot_badge pointer'>" + cot + "</span><span id='cla_del_cot-btn_" + ui.item.id + "' class='cla_del_cot text-danger pointer'><i class='fa fa-times-circle'></i></span></span> ")
         //   $("#ot_ids_" + ott.id).val(list_cots.join(","))
     //      }
         }

        $(this).val('');

        return false;
       }
 })

$("#project_ott_" + ott.id + "_ot").on('click', function() {
console.log("logblblbl: ")
    // Manually trigger the search, sending an empty value
    // This works because you have minLength: 0
    $(this).autocomplete("search", "");
});

}
$(".annot_sel").change(function(){
var ott_id = this.id.split("_")[2]
var v = $(this).val()
console.log("OTT_ID: " + ott_id + " => " + v)
let list_cats = JSON.parse(h_annots[v].list_cat_json)
if (list_cats){ 
$("#list_cats_" + ott_id).html(list_cats.map(x => "<span class='badge badge-info'>" + x + "</span>").join(" "))
}

refresh("list_cats_" + ott_id, "<%= raw annots_path %>/" + v + "/check_ontology?ott_id=" + ott_id, {loading:'fa:2x'})

})

$("#cancel_project").click(function(){
$("#ontop_window").addClass("hidden");
});

$("#delete_batch_file").click(function(){
refresh_post("form_container", "<%= delete_batch_file_project_path(@project.key) %>", [], 'post');
});

/*
$("#group_file").fileinput({
 uploadUrl: '<%= upload_file_projects_path(:type => 'group', :key => @project.key) %>', // server upload action
 uploadAsync: true,
 showPreview: false,
 allowedFileExtensions: ['tab', 'txt', 'csv'],
 showUpload: false,
 maxFileCount: 1,
 elErrorContainer: '#kv-error-2'
}).on("filebatchselected", function(event, files) {
 // trigger upload method immediately after files are selected
 $("#group_file").fileinput("upload");
}).on('filebatchpreupload', function(event, data, id, index) {
 $("#kv-success-2").html('<h4>Upload Status</h4><ul></ul>').hide();
}).on('fileuploaded', function(event, data, id, index) {
 var fname = data.files[index].name;
 var out = '<li>' + 'Uploaded file # ' + (index + 1) + ' - '  + fname + ' successfully.' + '</li>';
 $("#kv-success-2 ul").append(out);
 $("#group_file").attr('loaded', "1");
 $("#kv-success-2").fadeIn('slow');
 $("#project_group_filename").val(fname);

}).on('fileclear', function(event, id){
 $("#kv-success-2").hide();
 $("#project_group_filename").val('');
});
*/

 $("#public-btn").click(function(e){
 $("#public_btn").addClass("hidden")
  $("#set-public-details").removeClass("hidden")
/*  $("#popup_window").removeClass("hidden")
   var html = ''
   <% if @project.public == false %>
    html = "<div class='alert alert-info'>This operation allows to publish your results, which will be not editable anymore.<BR/>If more analyses are added to the project you can then freeze the results to let know to the users of the project that you validated them and will remain stable</div><div class='alert alert-danger'>WARNING: This procedure is not reversible!</div><div id='confirm_set_public-btn' class='btn btn-success'>Confirm to set this project public</div>"
   <% else %>
     html = "<div class='alert alert-info'>This operation allows to freeze results of a public project</div><div class='alert alert-danger'>WARNING: This procedure is not reversible!</div><div id='confirm_set_public-btn' class='btn btn-success'>Confirm to freeze all new analyses of this project</div>"
   <% end %>
  $("#popup_container").html(html)
  var w = $(window).width();
  $("#popup_window").css({
        left: 500,
        width:w - 250,
        top: e.pageY - 200
        z-index:10000
    }).stop().show(100);
*/
 })
 $("#cancel-public-btn").click(function(e){
  $("#public_btn").removeClass("hidden")
  $("#set-public-details").addClass("hidden")
});

$("#ontop_window").on("click", "#confirm_set_public-btn", function(e){
 refresh_post("set_public_container", "<%= set_public_project_path(:key => @project.key) %>/", [], 'post', {loading: 'fa-2x'})
 $("#ontop_window").addClass("hidden")
});


<% end %>
